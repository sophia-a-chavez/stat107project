---
title: "Stat107 Project"
format: html
editor: visual
---

## Group: LCSB

### Members: Sophia Chavez, Carolyn Hsu, Leo Guzman, and Bryan Pham

#### Research topic:

Our group will analyze a dataset containing the reported fatal police shootings in the United States from 2015 through 2022. By comparing our findings to the people in power and/or the social movements throughout those years, our goal is to identify any correlations between the current political/social climate and the reported fatal police shootings in the United States.

```{r}
#| code-fold: true
FatalShootingsStats <- read.csv("FatalPoliceShootings_US.csv")
head(FatalShootingsStats, 2)
```

```{r}
#| code-fold: true
#Convert the `date` column to Date format so can extract the year
FatalShootingsStats$date <- as.Date(FatalShootingsStats$date, format = "%m/%d/%Y")
#Made new column for year as an int
FatalShootingsStats$year <- as.integer(format(FatalShootingsStats$date, "%Y"))


```

## Event 1: Black Lives Matter Movement

On May 25, 2020, George Floyd, a Black man living in Minneapolis, Minnesota was brutally killed by a Minneapolis police officer. This sparked a new peak in the Black Lives Matter (BLM) movement, where there was a new wave of both peaceful protests and riots. The peak of the BLM riots, vandalism, arson and looting occurred from May 26th to June 8th in 2020. During these 2 weeks, were fatal shootings higher than normal?

```{r}
#| code-fold: true
library(dplyr)
# Convert the 'Date' column to Date type if it isn't already
FatalShootingsStats$date <- as.Date(FatalShootingsStats$date, format = "%Y-%m-%d")  # Adjust format if needed

# Specify the two specific dates you want to check
date1 <- as.Date("2020-05-26")  # Example date 1
date2 <- as.Date("2020-06-08")  # Example date 2

# Filter data for those two dates and count the total number of shootings
shootings_period <- FatalShootingsStats %>%
  filter(date >= date1 & date <= date2)
 
# Number of unique days in the time period
unique_days_period <- length(seq.Date(date1, date2, by = "day"))

# Total number of shootings in the time period
total_shootings_period <- nrow(shootings_period)

# Average shootings per day for the time period (including all days in the range)
avg_shootings_per_day_period <- total_shootings_period / unique_days_period

# 2. Calculate the average number of shootings per day for the entire dataset
# Find the first and last dates in the dataset
first_date <- min(FatalShootingsStats$date)
last_date <- max(FatalShootingsStats$date)

# Number of unique days in the entire dataset (including all days between the first and last date)
unique_days_total <- length(seq.Date(first_date, last_date, by = "day"))

# Total number of shootings in the entire dataset
total_shootings_total <- nrow(FatalShootingsStats)

# Average shootings per day for the entire dataset (including all days in the range)
avg_shootings_per_day_total <- total_shootings_total / unique_days_total

# Print the results
cat("Average shootings per day for the period from May 26, 2020 to June 8, 2020 :", avg_shootings_per_day_period, "\n")
cat("Average shootings per day for the entire dataset:", avg_shootings_per_day_total, "\n")

```

```{r}
#| code-fold: true
# Create a vector with the two averages
average_shootings <- c(avg_shootings_per_day_period, avg_shootings_per_day_total)

# Create a bar plot
barplot(average_shootings, 
        names.arg = c("peak BLM riots", "Entire Dataset"), 
        main = "Comparison of Average Shootings per Day", 
        ylab = "Average Shootings per Day", 
        col = c("lightblue", "lightgreen"), 
        border = "black")

```

```{r}
#| code-fold: true
library(maps)
state_to_highlight <- "Minnesota"

# Basic Map Plot
maps::map("state", col = "lightgray", fill = TRUE, bg = "white", lwd = 0.2)  # Draw USA map
maps::map("state", region = state_to_highlight, col = "lightblue", fill = TRUE, add = TRUE)

# Overlay points for Los Angeles and Miami
# Coordinates for Los Angeles
points(-118.2437, 34.0522, col = "blue", pch = 19, cex = 2)  # Los Angeles

# Optionally, add text labels for the cities
text(-118.2437, 34.0522, "Los Angeles", pos = 3, col = "blue", cex = 1)

# Overlay points (longitude, latitude) on the map
points(shootings_period$longitude, shootings_period$latitude, col = "red", pch = 20, cex = 1.5)

```

As we can see, the average number of fatal shootings a day were slightly greater during the peak of the riots, vandalism, arson and looting after George Floyd's death. Surprisingly, none of the deaths occurred in Minneapolis, which was a hot spot for said BLM riots, but Los Angeles, which was also a hot spot, is shown to have a few deaths in it's area. So, while the average number of fatal shooting during the peak of the BLM riots period doesn't seem that much larger than the average number of fatal shootings in the entire data set, it doesn't tell the entire picture. If the average number of fatal shootings during the seven and a half years the data set encapsulates was the same as the average during the peak of the BLM riots, there would be an increase of 1,769 fatal shootings or 236 fatal shootings a year.

## **Event 2: Covid-19 Lockdowns**

On January 5th, 2020, the CDC’s National Center for Immunization and Respiratory Diseases investigated the outbreak of a pneumonia-adjacent illness that was not responding to treatment, and by March 15th all but 7 U.S states shut down businesses, universities, and other large gatherings while urging people to stay in their homes to slow the spread. By analyzing our original dataset with respect to enforced quarantine periods, we can identify possible correlations between spatial mobility and fatal shootings in the US.

```{r}
#| code-fold: true
library(maps)

library(tidyverse)
library(dplyr)
library(ggplot2)

# Convert the 'Date' column to Date type if it isn't already
FatalShootingsStats$date <- as.Date(FatalShootingsStats$date, format = "%Y-%m-%d")  

#filtering data by covid lockdown timeline
during_date1 <- as.Date("2020-03-15")  # main US lockdown start
during_date2 <- as.Date("2021-05-01")  # need to find sorce for this date
during_covid <- FatalShootingsStats %>%
  filter(date >= during_date1 & date <= during_date2)

before_date1 <- min(FatalShootingsStats$date)  
before_date2 <- as.Date("2020-03-14")
before_covid <- FatalShootingsStats %>%
  filter(date >= before_date1 & date <= before_date2)

after_date1 <- as.Date("2021-05-01")  
after_date2 <- max(FatalShootingsStats$date)
after_covid <- FatalShootingsStats %>%
  filter(date >= after_date1 & date <= after_date2)

#total number of shootings per time period
total_shootings_during <- nrow(during_covid)
total_shootings_before <- nrow(before_covid)
total_shootings_after <- nrow(after_covid)

#total number of days in time period
unique_days_during <- length(seq.Date(during_date1, during_date2, by = "day"))
unique_days_before <- length(seq.Date(before_date1, before_date2, by = "day"))
unique_days_after <- length(seq.Date(after_date1, after_date2, by = "day"))

#shootings per day
avg_shootings_during <- total_shootings_during / unique_days_during
avg_shootings_before <- total_shootings_before / unique_days_before
avg_shootings_after <- total_shootings_after / unique_days_after

cat("Before the lockdowns: Total shootings ",total_shootings_before," Average shootings per day", avg_shootings_before, "\n")
cat("During the lockdowns: Total shootings ",total_shootings_during," Average shootings per day", avg_shootings_during, "\n")
cat("After the lockdowns: Total shootings ",total_shootings_after," Average shootings per day", avg_shootings_after, "\n")
#cat("Number of days in dataset before lockdowns ",unique_days_before,"\n", "Number of days in dataset during lockdowns ",unique_days_during,"\n","Number of days in dataset after lockdowns ",unique_days_after,"\n")

```

Map Visual Note: It’s important to remember the fatal shootings dataset has more data points before the COVID-19 pandemic compared to after. The higher density of shootings before the COVID-19 lockdowns can be linked to the skewed dataset/states with higher population

```{r}
#| code-fold: true
#"Arkansas", "Iowa", "Nebraska", "North Dakota", "South Dakota", "Utah", "Wyomming"
## Arkansas data 
before_ar <- before_covid %>%
  filter(before_covid$state == "AR" | before_covid$state == "IA" | before_covid$state == "NE" | before_covid$state == "ND" | before_covid$state == "SD" | before_covid$state == "UT" | before_covid$state == "WY" )
during_ar <- during_covid %>%
  filter(during_covid$state == "AR" | during_covid$state == "IA" | during_covid$state == "NE" | during_covid$state == "ND" | during_covid$state == "SD" | during_covid$state == "UT" | during_covid$state == "WY" )
after_ar <- after_covid %>%
  filter(after_covid$state == "AR" | after_covid$state == "IA" | after_covid$state == "NE" | after_covid$state == "ND" | after_covid$state == "SD" | after_covid$state == "UT" | after_covid$state == "WY" )


#total number of shootings per time period
total_shootings_Bar <- nrow(during_ar)
total_shootings_Dar <- nrow(before_ar)
total_shootings_Aar <- nrow(after_ar)


#shootings per day
state_avg_shootings_during <- total_shootings_Dar / unique_days_during
state_avg_shootings_before <- total_shootings_Bar / unique_days_before
state_avg_shootings_after <- total_shootings_Aar / unique_days_after

cat("Shootings per day during COVID-19 in states with no enforced lockdowns",state_avg_shootings_during,"\n",  "Shootings per day before COVID-19 in states with no enforced lockdowns",state_avg_shootings_before,"\n", "Shootings per day after COVID-19in  states with no enforced lockdowns",state_avg_shootings_after)

```

We expect the total number of fatal shootings will decrease during the enforced lockdown period due to the decreased social gatherings. However, our results show a different pattern, in fact we can see that there was no significant drop in the number of average shootings per day before and during lockdowns. Additionally, we can see that during and before COVID-19 lockdowns, the number of fatal shootings decreased in both states with and without enforced lockdowns. The decreased number of shootings in non-enforced lockdown states may be attributed to the overall decreased spatial mobility in the US. Numerous households voluntarily quarantined regardless of their state's COVID-19 restrictions. Because we can identify a slight decreasing pattern in our data, we can conclude that the COVID-19 pandemic had little to no significant impact on the overall number of Police fatal shootings.

# Fatal Shootings Dataset Analytics/ Compairing Event 1 and 2

```{r}
#| code-fold: true
#BLM
date1 <- as.Date("2020-05-26")  # Example date 1
date2 <- as.Date("2020-06-08")  # Example date 2
# Filter data for those two dates and count the total number of shootings
shootings_period <- FatalShootingsStats %>%
  filter(date >= date1 & date <= date2)
# Number of unique days in the time period
unique_days_period <- length(seq.Date(date1, date2, by = "day"))
# Total number of shootings in the time period
total_shootings_period <- nrow(shootings_period)
avg_shootings_per_day_BLM <- total_shootings_period / unique_days_period


#Lockdowns
during_date1 <- as.Date("2020-03-15")  # main US lockdown start
during_date2 <- as.Date("2021-05-01")  # need to find sorce for this date
during_covid <- FatalShootingsStats %>%
  filter(date >= during_date1 & date <= during_date2)
total_shootings_during <- nrow(during_covid)
#total number of days in time period
unique_days_during <- length(seq.Date(during_date1, during_date2, by = "day"))
#shootings per day
avg_shootings_duringCovid <- total_shootings_during / unique_days_during

bodycam_true <- c(sum(during_covid$body_camera == "TRUE"), sum(shootings_period$body_camera == "TRUE"), sum(FatalShootingsStats$body_camera == "TRUE"))

bodycam_percent <- c((bodycam_true[1]/nrow(during_covid)), (bodycam_true[2]/nrow(shootings_period)),(bodycam_true[3]/nrow(FatalShootingsStats)))

average_age <- c(mean(during_covid$age, na.rm = TRUE), mean(shootings_period$age, na.rm = TRUE), mean(FatalShootingsStats$age, na.rm = TRUE))

avg_shootings <-  c(avg_shootings_per_day_BLM, avg_shootings_duringCovid, avg_shootings_per_day_total)

gun_armedp <- c((sum(during_covid$armed == "gun") /nrow(during_covid)), (sum(shootings_period$armed == "gun") /nrow(shootings_period)), (sum(FatalShootingsStats$armed == "gun") / nrow(FatalShootingsStats)))

unarmed_armedp <- c((sum(during_covid$armed == "unarmed") /nrow(during_covid)), (sum(shootings_period$armed == "unarmed") / nrow(shootings_period)), (sum(FatalShootingsStats$armed == "unarmed") / nrow(FatalShootingsStats)))

car_armedp <- c((sum(during_covid$armed == "Vehicle") / nrow(during_covid)), (sum(shootings_period$armed == "Vehicle") / nrow(shootings_period)), (sum(FatalShootingsStats$armed == "Vehicle") / nrow(FatalShootingsStats)))

mental_illness <- c(sum(during_covid$signs_of_mental_illness == "TRUE")/nrow(during_covid), sum(shootings_period$signs_of_mental_illness == "TRUE")/nrow(shootings_period), sum(FatalShootingsStats$signs_of_mental_illness == "TRUE")/nrow(FatalShootingsStats))


BLM_Covid <- data.frame(avg_shootings, round(average_age, 1), bodycam_percent, gun_armedp, unarmed_armedp, car_armedp, mental_illness) 
names(BLM_Covid) <- c("Average Fatal Shootings Per Day", "Average Age", "Percent of officers with turned on body camera", "Armed (gun)", "Unarmed", "Armed (car)", "Signs of mental illness")
rownames(BLM_Covid) <- c("BLM", "Covid-19", "Entire Dataset")
BLM_Covid
```

hat

```{r}
#| code-fold: true
# showing interesting data points
time_period <- c("BLM", "COVID", "Entire Database")
colors <- c("lightblue", "lightgreen", "lightcoral")
barplot(BLM_Covid$`Average Fatal Shootings Per Day`, 
        col = colors,
        main = "Average Fatal Shootings Per Day",
        xlab = "Time Period",  )
legend("topright", legend = time_period , col = colors, pch = 16 ) #TO FIX make sure legend is not on top of figure
#armed (gun)
time_period <- c("BLM", "COVID", "Entire Database")
colors <- c("lightblue", "lightgreen", "lightcoral")
barplot(BLM_Covid$`Armed (gun)`, 
        col = colors,
        main = "Percent of shooting victims Armed(GUN) ",
        xlab = "Time Period", ylim = c(0,1))
legend("topright", legend = time_period , col = colors, pch = 16 ) 
#
time_period <- c("BLM", "COVID", "Entire Database")
colors <- c("lightblue", "lightgreen", "lightcoral")
barplot(BLM_Covid$`Percent of officers with turned on body camera`, 
        col = colors,
        main = "Percent of officers with turned on body camera",
        xlab = "Time Period", ylim = c(0,1))
legend("topright", legend = time_period , col = colors, pch = 16) 
# another option changing lables into x axis 
```

```{r}
#| code-fold: true
shootings_period$age <- as.numeric(as.character(shootings_period$age))
during_covid$age <- as.numeric(as.character(during_covid$age))
FatalShootingsStats$age <- as.numeric(as.character(FatalShootingsStats$age))
# Add AgeRange dynamically to each dataset
shootings_period$AgeRange <- cut(
  shootings_period$age,
  breaks = c(0, 18, 35, Inf),
  labels = c("0-18", "19-35", "36+"),
  right = FALSE
)
during_covid$AgeRange <- cut(
  during_covid$age,
  breaks = c(0, 18, 35, Inf),
  labels = c("0-18", "19-35", "36+"),
  right = FALSE
)
FatalShootingsStats$AgeRange <- cut(
  FatalShootingsStats$age,
  breaks = c(0, 18, 35, Inf),
  labels = c("0-18", "19-35", "36+"),
  right = FALSE
)

# Add a dataset column for identification
shootings_period$Dataset <- "BLM"
during_covid$Dataset <- "COVID"
FatalShootingsStats$Dataset <- "Entire Database"

# Combine datasets into one
combined_data <- bind_rows(shootings_period, during_covid, FatalShootingsStats)

# Calculate proportions
summary_data <- combined_data %>%
  group_by(Dataset, AgeRange) %>%
  summarise(Count = n(), .groups = "drop") %>%
  group_by(Dataset) %>%
  mutate(Proportion = Count / sum(Count))

# Create a stacked bar graph with proportions
ggplot(summary_data, aes(x = Dataset, y = Proportion, fill = AgeRange)) +
  geom_bar(stat = "identity", position = "stack") +
  geom_text(
    aes(label = scales::percent(Proportion, accuracy = 0.1)), # Format as percentage
    position = position_stack(vjust = 0.5), # Place text in the middle of each segment
    size = 3 # Adjust text size
  ) +
  labs(
    title = "Age Range Proportion Across Datasets",
    x = "Dataset",
    y = "Proportion",
    fill = "Age Range"
  ) +
  scale_y_continuous(labels = scales::percent_format()) + # Display y-axis as percentages
  theme_minimal()
```


# Race Statistics


```{r}
#| code-fold: true
# filtering data to include only unarmed incidents
unarmed_data <- subset(FatalShootingsStats, FatalShootingsStats$armed == "unarmed")

# count unarmed fatalities by race
unarmed_deaths_by_race <- aggregate(unarmed_data$armed, 
                                    by = list(Race = unarmed_data$race_name), 
                                    FUN = length)
colnames(unarmed_deaths_by_race)[2] <- "Unarmed_Deaths"

# count display
unarmed_deaths_by_race
# count total fatalities by race
total_deaths_by_race <- aggregate(FatalShootingsStats$armed, 
                                  by = list(Race = FatalShootingsStats$race_name), 
                                  FUN = length)

# ensure all races are represented in unarmed deaths by race
all_races <- unique(FatalShootingsStats$race_name)
unarmed_deaths_by_race <- aggregate(unarmed_data$armed, 
                                    by = list(Race = unarmed_data$race_name), 
                                    FUN = length)
unarmed_deaths_by_race <- merge(data.frame(Race = all_races), unarmed_deaths_by_race, 
                                by = "Race", all.x = TRUE)
unarmed_deaths_by_race[is.na(unarmed_deaths_by_race)] <- 0  # Replace NA with 0

# merge total deaths and unarmed deaths
race_unarmed_comparison <- merge(unarmed_deaths_by_race, total_deaths_by_race, 
                                 by = "Race", 
                                 suffixes = c("_Unarmed", "_Total"))

# calculate percentage of unarmed fatalities for each race
race_unarmed_comparison$Unarmed_Death_Percentage <- 
  (race_unarmed_comparison$x_Unarmed / race_unarmed_comparison$x_Total) * 100

# rename columns for clarity
colnames(race_unarmed_comparison) <- c("Race", "Unarmed_Deaths", "Total_Deaths", "Unarmed_Death_Percentage")

# display the updated data frame
race_unarmed_comparison

# adjust margins to give more space to labels
par(mar = c(5, 10, 4, 2) + 0.1) # Increase left margin for y-axis labels

# create a horizontal bar plot
barplot(race_unarmed_comparison$Unarmed_Death_Percentage,
names.arg = race_unarmed_comparison$Race,
main = "Percentage of Unarmed Fatalities by Race",
xlab = "Percentage of Unarmed Fatalities",
col = "lightcoral",
horiz = TRUE,       # Horizontal bars
las = 1,            # Ensure labels are horizontal on y-axis
cex.names = 0.9)    # Adjust label size if needed

# reset margins after plotting (optional if running multiple plots in sequence)
par(mar = c(5, 4, 4, 2) + 0.1)

# i think this code can be reused if we make the x axis the time period and show unarmed/armed deaths per race - sophia
```
The graph demonstrates a wide percentages of fatalities by race, revealing the disparities in police-related fatalities among racial group. Black and Hispanic individuals have higher percentages of unarmed deaths to compared to other racial group representing the systemic biases in the police force. Native Americans show a disproportionate portion relative to their population size, showing their vulnerability to police forces.

```{r}
# Ensure the dataset has the required columns: Year, Race, Count
# If not, aggregate data to create race_year_counts
if (!"Count" %in% colnames(race_year_counts)) {
  race_year_counts <- FatalShootingsStats %>%
    group_by(Year = year, Race = race_name) %>%
    summarise(Count = n(), .groups = "drop")
}

# Ensure data completeness: fill missing values with zeros for all combinations of Year and Race
race_year_counts <- race_year_counts %>%
  complete(Year, Race, fill = list(Count = 0))

# Set up an empty plot with the correct axes limits
plot(NULL, xlim = range(race_year_counts$Year, na.rm = TRUE), 
     ylim = c(0, max(race_year_counts$Count, na.rm = TRUE)), 
     xlab = "Year", ylab = "Number of Fatal Shootings", 
     main = "Fatal Shootings by Race Over the Years")

# Define colors for each race
race_colors <- c("blue", "green", "red", "purple", "orange", "pink", "gray")

# Get unique races
unique_races <- unique(race_year_counts$Race)

# Loop through each race to plot its line on the graph
for (i in 1:length(unique_races)) {
  # Subset data for the current race
  race_data <- subset(race_year_counts, Race == unique_races[i])
  
  # Ensure data is sorted by Year for proper line plotting
  race_data <- race_data[order(race_data$Year), ]
  
  # Plot the line for this race
  lines(race_data$Year, race_data$Count, type = "o", col = race_colors[i], pch = 16)
}

# Add a legend
legend("topright", legend = unique_races, col = race_colors, pch = 16, lty = 1)

```
A general trend is the decline in number of fatal shooting over the years, particularly 2020-2022 probably due to the pandemic reforming public interaction in police enforcement. The height of shootings in 2020 is likely caused from the Black Lives Matter movement



```{r}
#| code-fold: true

FatalShootingsStats$age <- as.numeric(as.character(FatalShootingsStats$age))

# Create AgeRange dynamically
FatalShootingsStats$AgeRange <- cut(
  FatalShootingsStats$age,
  breaks = c(0, 18, 35, Inf), # Define age range intervals
  labels = c("0-18", "19-35", "36+"),
  right = FALSE # Makes intervals inclusive on the left
)

# Summarize data to count individuals by Race and AgeRange
summary_data <- FatalShootingsStats %>%
  group_by(race, AgeRange) %>%
  summarise(Count = n(), .groups = "drop")

# Create the bar plot
ggplot(FatalShootingsStats, aes(x = race_name, y = age, fill = AgeRange)) +
  geom_bar(stat = "identity", position = "dodge") + # Position bars side by side
  labs(
    title = "Bar Plot of Races by Age Range",
    x = "Race",
    y = "Count"
  ) +
  scale_fill_brewer(palette = "Set2") + # Optional color palette
  theme_minimal() # Clean theme
```

Findings: During peak BLM movement periods, the percentage of officers with turned-on body cameras increases from approximately 14% to 21%. Additionally, there is a positive correlation between average fatalities per day and the percentage of turned-on body cameras throughout all highlighted datasets. 

Questions: 
  - What did we expect?
  - What actually happened?
  - What are the parameters when classifying a person's race_name as "unknown"? 
  - Why is there a substantial jump in fatalities per day with unknown races, specifically beginning in 2020? 
  - Were there any correlations between the current political/social climate and the reported fatal police shootings in the United States?
