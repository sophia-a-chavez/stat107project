---
title: "main"
format: html
editor: visual
---

## Leo Guzman - attempt 1

My plan is to find the average amount of shootings per year by race

```{r}
FatalShootingsStats <- read.csv("FatalPoliceShootings_US.csv")

print(class(FatalShootingsStats))

head(FatalShootingsStats)
```

```{r}
#Convert the `date` column to Date format so can extract the year
FatalShootingsStats$date <- as.Date(FatalShootingsStats$date, format = "%m/%d/%Y")

#Made new column for year as an int
FatalShootingsStats$year <- as.integer(format(FatalShootingsStats$date, "%Y"))


```

```{r}
#Analyze 2015 as a test run

data_filtered <- FatalShootingsStats[FatalShootingsStats$year == 2015, ]


#Grab the total amount of times certain races are in the data
asian_count <- nrow(data_filtered[data_filtered$race_name == 'Asian', ])
black_count <- nrow(data_filtered[data_filtered$race_name == 'Black', ])
white_count <- nrow(data_filtered[data_filtered$race_name == 'White', ])
hispanic_count <- nrow(data_filtered[data_filtered$race_name == 'Hispanic', ])
native_count <- nrow(data_filtered[data_filtered$race_name == 'Native American', ])
other_count <- nrow(data_filtered[data_filtered$race_name == 'Other', ])
unknown_count <- nrow(data_filtered[data_filtered$race_name == 'Unknown', ])

#Created a data.frame with counts so can plot them
race_counts <- data.frame(
  race = c("White", "Black", "Hispanic", "Asian", "Native", "Other", "Unknown"),
  count = c(white_count, black_count, hispanic_count, asian_count, native_count, other_count, unknown_count)
)

#Created a pie chart
pie(race_counts$count, 
    labels = race_counts$race, 
    main = "Proportion of Different Races in Fatal Shootings in 2015",
    col = rainbow(length(race_counts$count)))


```

```{r}
## Sophia's addition 
#creating subsets by year

FatalShootingsStats <- na.omit(FatalShootingsStats) # getting rid of rows with any NA values


data_15 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2015 )
data_16 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2016 )
data_17 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2017 )
data_18 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2018 )
data_19 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2019 )
data_20 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2020 )
data_21 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2021 )
data_22 <- subset(FatalShootingsStats, FatalShootingsStats$year == 2022 )
# basic stats dependent on year
total <- c(nrow(data_15), nrow(data_16), nrow(data_17), nrow(data_18), nrow(data_19), nrow(data_20), nrow(data_21), nrow(data_22) )

average_age <- c(mean(data_15$age), mean(data_16$age), mean(data_17$age), mean(data_18$age), mean(data_19$age), mean(data_20$age), mean(data_21$age), mean(data_22$age))

bodycam_false <- c(sum(data_15$body_camera == "FALSE"), sum(data_16$body_camera == "FALSE"), sum(data_17$body_camera == "FALSE"), sum(data_18$body_camera == "FALSE"), sum(data_19$body_camera == "FALSE"), sum(data_20$body_camera == "FALSE"), sum(data_21$body_camera == "FALSE"), sum(data_22$body_camera == "FALSE"))

bodycam_true <- c(sum(data_15$body_camera == "TRUE"), sum(data_16$body_camera == "TRUE"), sum(data_17$body_camera == "TRUE"), sum(data_18$body_camera == "TRUE"), sum(data_19$body_camera == "TRUE"), sum(data_20$body_camera == "TRUE"), sum(data_21$body_camera == "TRUE"), sum(data_22$body_camera == "TRUE"))

bodycam_percent <- c((bodycam_true[1]/total[1]), (bodycam_true[2]/total[2]),(bodycam_true[3]/total[3]),(bodycam_true[4]/total[4]),(bodycam_true[5]/total[5]),(bodycam_true[6]/total[6]),(bodycam_true[7]/total[7]),(bodycam_true[8]/total[7]))

year_stats <- data.frame(total, round(average_age, 1), bodycam_false, bodycam_true, bodycam_percent ) 
names(year_stats) <- c("Total Fatal Shootings", "Average Age", "No Body Camera", "Yes Body Camera", "percent of yes body camera")
rownames(year_stats) <- c("2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022")
year_stats





```

```{r}
# adding colunm for current president -> is not currently working,  


FatalShootingsStats$month <- as.integer(format(FatalShootingsStats$date, "%m"))
FatalShootingsStats$day <- as.integer(format(FatalShootingsStats$date, "%d"))

FatalShootingsStats$President <-ifelse(FatalShootingsStats$month >= 1 & FatalShootingsStats$day >=20 & FatalShootingsStats$year >=2021, FatalShootingsStats$President <-"Joseph R. Biden", FatalShootingsStats$President <-"Donald Trump")

FatalShootingsStats$President <-ifelse((FatalShootingsStats$month >= 1 & FatalShootingsStats$day >=20 & FatalShootingsStats$year <=2016), FatalShootingsStats$President <-"Barack Obama", FatalShootingsStats$President <-"Donald Trump")
data_18 <- subset(FatalShootingsStats, FatalShootingsStats$year >= 2015 )

data_18

```

```{r}
# Aggregate data by year and race_name
race_year_counts <- aggregate(FatalShootingsStats$race_name, 
                              by = list(Year = FatalShootingsStats$year, 
                                        Race = FatalShootingsStats$race_name), 
                              FUN = length)

# Rename the count column for clarity
colnames(race_year_counts)[3] <- "Count"

# Create a matrix to store counts for each race across years
race_counts_matrix <- xtabs(Count ~ Race + Year, data = race_year_counts)

# Set up colors for each race
colors <- c("lightblue", "lightgreen", "lightcoral", "lightpink", "wheat", "lavender", "gray")

# Create the bar plot
barplot(race_counts_matrix, beside = TRUE, col = colors,
        main = "Fatal Shootings by Race and Year",
        xlab = "Year", ylab = "Number of Fatal Shootings", 
        legend.text = rownames(race_counts_matrix), 
        args.legend = list(x = "topright", inset = c(-0.05, 0)))

```
